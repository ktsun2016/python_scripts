  575  mkdir git_folder
  576  cd git_folder/
  577  show firmware upgrade status 
  578  ssh-keygen -t rsa -b 4096 -C "kuotungsun@gmail.com"
  579  more /Users/ktsun/.ssh/id_rsa_google
  580  eval "$(ssh-agent -s)"
  581  vi ~/.ssh/config
  582  ssh-keygen -t rsa -b 4096 -C "kuotungsun@gmail.com"
  583  vi ~/.ssh/config
  584  ssh-add -K ~/.ssh/id_rsa_google
  585  more  ~/.ssh/id_rsa_google
  586  more  ~/.ssh/id_rsa
  587  cd /.ssh
  588  cd 
  589  cd .ssh
  590  ls
  591  pbcopy
  592  pbcopy < ~/.ssh/id_rsa_google.pub 
  593  vi kk
  594  cd
  595  cd Documents/python/
  596  ls
  597  ls -altr
  598  cp pbr_pg_traffic_v1.py /Users/ktsun/git_folder/
  599  cd /Users/ktsun/git_folder/
  600  ls
  601  mkdir python_scripts
  602  mv pbr_pg_traffic_v1.py python_scripts/
  603  ls
  604  cd python_scripts/
  605  git status
  606  git clone https://github.com/ktsun2016/python_scripts.git
  607  ls
  608  pwd
  609  ls
  610  cd python_scripts/
  611  ls
  612  cd ..
  613  ls
  614  mv pbr_pg_traffic_v1.py python_scripts/
  615  ls
  616  cd python_scripts/
  617  ls
  618  git status
  619  git add pbr_pg_traffic_v1.py 
  620  git status
  621  git commit -m "pbr pref-grp traffic"
  622  git push
  623  history
KTSUN-M-26UB:python_scripts ktsun$ ls
README.md		pbr_pg_traffic_v1.py
KTSUN-M-26UB:python_scripts ktsun$ 

Generating a new SSH key
Open Terminal.

Paste the text below, substituting in your GitHub email address.

$ ssh-keygen -t rsa -b 4096 -C "your_email@example.com"
This creates a new ssh key, using the provided email as a label.

> Generating public/private rsa key pair.
When you're prompted to "Enter a file in which to save the key," press Enter. This accepts the default file location.

> Enter a file in which to save the key (/Users/you/.ssh/id_rsa): [Press enter]
At the prompt, type a secure passphrase. For more information, see "Working with SSH key passphrases".

> Enter passphrase (empty for no passphrase): [Type a passphrase]
> Enter same passphrase again: [Type passphrase again]
Adding your SSH key to the ssh-agent
Before adding a new SSH key to the ssh-agent to manage your keys, you should have checked for existing SSH keys and generated a new SSH key. When adding your SSH key to the agent, use the default macOS ssh-add command, and not an application installed by macports, homebrew, or some other external source.

Start the ssh-agent in the background.

$ eval "$(ssh-agent -s)"
> Agent pid 59566
If you're using macOS Sierra 10.12.2 or later, you will need to modify your ~/.ssh/config file to automatically load keys into the ssh-agent and store passphrases in your keychain.

Host *
  AddKeysToAgent yes
  UseKeychain yes
  IdentityFile ~/.ssh/id_rsa
Add your SSH private key to the ssh-agent and store your passphrase in the keychain. If you created your key with a different name, or if you are adding an existing key that has a different name, replace id_rsa in the command with the name of your private key file.

$ ssh-add -K ~/.ssh/id_rsa
Note: The -K option is Apple's standard version of ssh-add, which stores the passphrase in your keychain for you when you add an ssh key to the ssh-agent.

If you don't have Apple's standard version installed, you may receive an error. For more information on resolving this error, see "Error: ssh-add: illegal option -- K."

Add the SSH key to your GitHub account.

